# Show that the Init method is called at the beginning.
run
----
TEA PRINT: {MODEL INIT}
-- view:
MODEL VIEWðŸ›‡

subtest key_input

run trace=on
type ab cd
----
-- trace: before "type ab cd"
-- trace: after "type"
-- view:
MODEL VIEWðŸ›‡
-- trace: before finish
-- view:
MODEL VIEWðŸ›‡
-- trace: processing 5 messages
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{97}, Alt:false}
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{98}, Alt:false}
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{32}, Alt:false}
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{99}, Alt:false}
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{100}, Alt:false}
-- trace: processing 5 cmds
-- trace: translated cmd: tea.enterAltScreenMsg
-- trace: translated cmd: tea.printLineMessage
-- trace: translated cmd: tea.printLineMessage
-- trace: translated cmd: tea.enableMouseCellMotionMsg
-- trace: translated cmd: tea.printLineMessage
-- trace: processing 5 messages
-- trace: msg tea.enterAltScreenMsg{}
TEA ENTER ALT
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: msg tea.enableMouseCellMotionMsg{}
TEA ENABLE MOUSE CELL MOTION
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: at end
-- view:
MODEL VIEWðŸ›‡

run trace=on
enter ab
----
-- trace: before "enter ab"
-- trace: after "enter"
-- view:
MODEL VIEWðŸ›‡
-- trace: before finish
-- view:
MODEL VIEWðŸ›‡
-- trace: processing 3 messages
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{97}, Alt:false}
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{98}, Alt:false}
-- trace: msg tea.KeyMsg{Type:13, Runes:[]int32(nil), Alt:false}
-- trace: processing 3 cmds
-- trace: translated cmd: tea.enterAltScreenMsg
-- trace: translated cmd: tea.printLineMessage
-- trace: translated cmd: tea.printLineMessage
-- trace: processing 3 messages
-- trace: msg tea.enterAltScreenMsg{}
TEA ENTER ALT
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: at end
-- view:
MODEL VIEWðŸ›‡

run trace=on
paste "ab\ncd"
----
-- trace: before "paste \"ab\\ncd\""
-- trace: after "paste"
-- view:
MODEL VIEWðŸ›‡
-- trace: before finish
-- view:
MODEL VIEWðŸ›‡
-- trace: processing 1 messages
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{97, 98, 10, 99, 100}, Alt:false}
-- trace: processing 1 cmds
-- trace: translated cmd: tea.printLineMessage
-- trace: processing 1 messages
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: at end
-- view:
MODEL VIEWðŸ›‡

run trace=on
type ab
type cd
----
-- trace: before "type ab"
-- trace: after "type"
-- view:
MODEL VIEWðŸ›‡
-- trace: before "type cd"
-- trace: processing 2 messages
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{97}, Alt:false}
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{98}, Alt:false}
-- trace: processing 2 cmds
-- trace: translated cmd: tea.enterAltScreenMsg
-- trace: translated cmd: tea.printLineMessage
-- trace: after "type"
-- view:
MODEL VIEWðŸ›‡
-- trace: before finish
-- view:
MODEL VIEWðŸ›‡
-- trace: processing 4 messages
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{99}, Alt:false}
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{100}, Alt:false}
-- trace: msg tea.enterAltScreenMsg{}
TEA ENTER ALT
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: processing 2 cmds
-- trace: translated cmd: tea.enableMouseCellMotionMsg
-- trace: translated cmd: tea.printLineMessage
-- trace: processing 2 messages
-- trace: msg tea.enableMouseCellMotionMsg{}
TEA ENABLE MOUSE CELL MOTION
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: at end
-- view:
MODEL VIEWðŸ›‡

run trace=on
key space
key backspace
key ctrl+c
key alt+c
key alt+ctrl+down
----
-- trace: before "key space"
-- trace: after "key"
-- view:
MODEL VIEWðŸ›‡
-- trace: before "key backspace"
-- trace: processing 1 messages
-- trace: msg tea.KeyMsg{Type:-12, Runes:[]int32{32}, Alt:false}
-- trace: processing 1 cmds
-- trace: translated cmd: tea.printLineMessage
-- trace: after "key"
-- view:
MODEL VIEWðŸ›‡
-- trace: before "key ctrl+c"
-- trace: processing 2 messages
-- trace: msg tea.KeyMsg{Type:127, Runes:[]int32(nil), Alt:false}
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: processing 1 cmds
-- trace: translated cmd: tea.printLineMessage
-- trace: after "key"
-- view:
MODEL VIEWðŸ›‡
-- trace: before "key alt+c"
-- trace: processing 2 messages
-- trace: msg tea.KeyMsg{Type:3, Runes:[]int32(nil), Alt:false}
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: processing 1 cmds
-- trace: translated cmd: tea.printLineMessage
-- trace: after "key"
-- view:
MODEL VIEWðŸ›‡
-- trace: before "key alt+ctrl+down"
-- trace: processing 2 messages
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{99}, Alt:true}
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: processing 1 cmds
-- trace: translated cmd: tea.enableMouseCellMotionMsg
-- trace: after "key"
-- view:
MODEL VIEWðŸ›‡
-- trace: before finish
-- view:
MODEL VIEWðŸ›‡
-- trace: processing 2 messages
-- trace: msg tea.KeyMsg{Type:-14, Runes:[]int32(nil), Alt:true}
-- trace: msg tea.enableMouseCellMotionMsg{}
TEA ENABLE MOUSE CELL MOTION
-- trace: processing 1 cmds
-- trace: translated cmd: tea.printLineMessage
-- trace: processing 1 messages
-- trace: msg tea.printLineMessage{messageBody:"MODEL UPDATE"}
TEA PRINT: {MODEL UPDATE}
-- trace: at end
-- view:
MODEL VIEWðŸ›‡

subtest end

subtest resize

run
resize 80 25
----
TEA WINDOW SIZE: {80 25}
TEA PRINT: {MODEL UPDATE}
-- view:
MODEL VIEWðŸ›‡

subtest end

subtest special_messages

run
type MmcaACxq
----
TEA DISABLE MOUSE
TEA ENABLE MOUSE MOTION ALL
TEA ENABLE MOUSE CELL MOTION
TEA ENTER ALT
TEA EXIT ALT
TEA HIDE CURSOR
TEA EXEC
TEA QUIT
-- view:
MODEL VIEWðŸ›‡

subtest end

subtest cmd_returns_empty_msg

run trace=on
type e
----
-- trace: before "type e"
-- trace: after "type"
-- view:
MODEL VIEWðŸ›‡
-- trace: before finish
-- view:
MODEL VIEWðŸ›‡
-- trace: processing 1 messages
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{101}, Alt:false}
-- trace: processing 1 cmds
-- trace: translated cmd: <nil>
-- trace: at end
-- view:
MODEL VIEWðŸ›‡

subtest end

subtest cmd_timeout

run trace=on
type w
----
-- trace: before "type w"
-- trace: after "type"
-- view:
MODEL VIEWðŸ›‡
-- trace: before finish
-- view:
MODEL VIEWðŸ›‡
-- trace: processing 1 messages
-- trace: msg tea.KeyMsg{Type:-1, Runes:[]int32{119}, Alt:false}
-- trace: processing 1 cmds
-- trace: timeout waiting for command
-- trace: translated cmd: <nil>
-- trace: at end
-- view:
MODEL VIEWðŸ›‡


set cmd_timeout=500ms
----
cmd_timeout: 500ms

run
type w
----
TEA PRINT: {DELAYED HELLO}
-- view:
MODEL VIEWðŸ›‡

reset cmd_timeout
----
ok


subtest end
